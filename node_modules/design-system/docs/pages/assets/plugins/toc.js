/**
 * Table of Contents Generator plugin aka TOC
 *
 * Take Wintergreen-generated "contents" tree,
 * prune it, and re-arrange items order.
 * New content tree ordering is defined by the "TOC" key
 * in the main config.json
 */

const TOC = require('../../../config.json').TOC;

/**
 * Comparator function, given two strings formated as: `#-name`
 * this will split `#` and make a numerical comparison.
 *
 * @param {String} a
 * @param {String} b
 */
const keySort = (a, b) => Number(a.split('-')[0]) - Number(b.split('-')[0]);

module.exports = function toc(env, callback) {
  /**
   * Sort content tree
   *
   * @param {Object} contentTree
   * @param {Function} callback
   */
  function generator(contentTree, callback) {
    const contents = {};
    const sections = Object.keys(TOC);

    sections.sort(keySort).forEach(sectionKey => {
      const subSections = TOC[sectionKey].pages;
      const pages = {};

      subSections.forEach(subKey => {
        const fileName = `${subKey}.md`;
        const article = contentTree[sectionKey][fileName];

        if (article) {
          pages[fileName] = article;
        }
      });

      contents[sectionKey] = pages;
    });

    contentTree = contents;

    // Finish generator execution
    callback(null, contents);
  }

  // Instance generator: name, function
  env.registerGenerator('assets', generator);

  // Finish plugin execution
  callback();
};
