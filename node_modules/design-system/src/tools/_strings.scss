@import "type-checking";

/// str-replace
/// Replace occurrence of a string
///
/// Example of use:
/// str-replace("This is just an example", "just", "not")
/// @param {String} $string
/// @param {String} $search
/// @param {String} $replace [""]
/// @return {String}
@function str-replace($string, $search, $replace: "") {
  @if not(is-string($string)) {
    @return error(
      "The argument $string: `#{$string}` is of incorrect type: `#{type-of($string)}`. Type of `string` is required!"
    );
  } @else if not(is-string($search)) {
    @return error(
      "The argument $search: `#{$search}` is of incorrect type: `#{type-of($search)}`. Type of `string` is required!"
    );
  } @else if not(is-string($replace)) {
    @return error(
      "The argument $replace: `#{$replace}` is of incorrect type: `#{type-of($replace)}`. Type of `string` is required!"
    );
  }

  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

/// str-explode
/// Split a string by delimiter
///
/// Example of use:
/// str-explode("some-things-will-never-change", "-")
///
/// @param {String} $string
/// @param {String} $delimiter [""]
/// @return {space-list} List
@function str-explode($string, $delimiter: "") {
  @if not(is-string($string)) {
    @return error(
      "The argument $string: `#{$string}` is of incorrect type: `#{type-of($string)}`. Type of `string` is required!"
    );
  } @else if not(is-string($delimiter)) {
    @return error(
      "The argument $delimiter: `#{$delimiter}` is of incorrect type: `#{type-of($delimiter)}`. Type of `string` is required!"
    );
  }

  $result: ();
  $running: true;

  @if str-length($delimiter) == 0 {
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }

    @return $result;
  }

  @while $running {
    $index: str-index($string, $delimiter);

    @if $index != null {
      $item: str-slice($string, 1, ($index - 1));
      $result: append($result, $item);
      $string: str-slice($string, ($index + str-length($delimiter)));
    } @else {
      $running: false;
    }
  }

  @return append($result, $string);
}
