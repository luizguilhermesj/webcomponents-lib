@import "../../settings/colors";
@import "../../settings/fonts";

@import "../../tools/fonts";
@import "../../tools/strings";
@import "../../tools/maps";

// FIXME: Improve the naming convention,
// These variables are not able to overwrite in mosa skin in alice.
// Align variables with alice until we fully migrate fonts if possible.
$skip-font-fallbacks: false !default;

$proxima-nova-regular-font-family: "Proxima Nova";
$proxima-nova-light-font-family: "Proxima Nova Light";
$proxima-nova-bold-font-family: "Proxima Nova Bold";

$proxima-nova-font-family: (
  normal: $proxima-nova-regular-font-family,
  light: $proxima-nova-light-font-family,
  bold: $proxima-nova-bold-font-family
);

$base-line-height-ratio: 1.5;
$letter-spacing-base: 0.3px;
$letter-spacing: ($letter-spacing-base / $font-size-base) * 1em;

$cropping-shadow-width-base: 5;

// FIXME: Will be fixed later when defining how to provide assets support
// Some fonts should remain in alice so it is commented for now and alice uses its own.
// $font-path: 'path/to/fonts/';
$typography-levels: (
  $font-family-proxima-nova: (
    "1": (
      font-size: 52px,
      line-height: spacing(7.5),
      letter-spacing: 0.3px,
      font-styles: (
        bold-caps
      )
    ),
    "2": (
      font-size: 24px,
      line-height: spacing(4.5),
      letter-spacing: 0.3px,
      font-styles: (
        bold
      )
    ),
    "3": (
      font-size: 20px,
      line-height: spacing(4),
      letter-spacing: 0.3px,
      font-styles: (
        bold,
        normal
      )
    ),
    "4": (
      font-size: 16px,
      line-height: spacing(3),
      letter-spacing: 0.3px,
      font-styles: (
        bold,
        normal
      )
    ),
    "5": (
      font-size: 14px,
      line-height: spacing(2.5),
      letter-spacing: 0.3px,
      font-styles: (
        bold,
        normal,
        light
      )
    ),
    "6": (
      font-size: 13px,
      line-height: spacing(2.5),
      letter-spacing: 0.3px,
      font-styles: (
        bold,
        normal
      )
    ),
    "7": (
      font-size: 12px,
      line-height: spacing(2),
      letter-spacing: 0.3px,
      font-styles: (
        bold,
        normal,
        light
      )
    )
  )
);

// FIXME: We rather don't this but:
// Alice uses a very unusual way to load fonts in which:
// 1. loads all fonts as 'sans-serif' at first, and then
// 2. after page loaded a script change it to "Proxima Nova".
// ( hopefully that will be refactor/remove at some point,
// reference: theiconic/alice/patterns/js/theiconic.fontloader.js )
// This nuance creates issues for other systems that use `@include font-family(...)`
// a workaround is to set `$skip-font-fallbacks: true` to avoid applying fallback;
@function font-family-fallback($style, $fallback: "sans-serif") {
  $font: map-get($proxima-nova-font-family, $style);
  @return if($skip-font-fallbacks, $font, $fallback);
}

$font-family-fallbacks: (
  $proxima-nova-light-font-family: (
    font-family: font-family-fallback(light),
    font-weight: (
      normal: 100,
      bold: 300
    ),
    font-style: normal
  ),
  $proxima-nova-bold-font-family: (
    font-family: font-family-fallback(bold),
    font-weight: (
      normal: bold,
      bold: bold
    ),
    font-style: normal
  ),
  $proxima-nova-regular-font-family: (
    font-family: font-family-fallback(normal),
    font-weight: (
      normal: 300,
      bold: bold
    ),
    font-style: normal
  )
);

$font-styles: (
  light: (
    family: $proxima-nova-light-font-family,
    weight: normal,
    letter-spacing: $letter-spacing
  ),
  normal: (
    family: $proxima-nova-regular-font-family,
    weight: normal,
    letter-spacing: $letter-spacing
  ),
  normal-caps: (
    family: $proxima-nova-regular-font-family,
    weight: normal,
    letter-spacing: $letter-spacing,
    text-transform: uppercase
  ),
  bold: (
    family: $proxima-nova-bold-font-family,
    weight: normal,
    letter-spacing: $letter-spacing
  ),
  bold-caps: (
    family: $proxima-nova-bold-font-family,
    weight: normal,
    letter-spacing: $letter-spacing,
    text-transform: uppercase
  ),
  semibold: (
    family: $proxima-nova-regular-font-family,
    weight: bold,
    letter-spacing: $letter-spacing
  ),
  semibold-caps: (
    family: $proxima-nova-regular-font-family,
    weight: bold,
    letter-spacing: $letter-spacing,
    text-transform: uppercase
  )
);

$body-font-family: $proxima-nova-regular-font-family, "Helvetica Neue",
  "Helvetica", Helvetica, Arial, sans-serif;

/// Declare font-face style
/// @param {String} $name [''] font family name
/// @param {String} $basename [''] font file name
@mixin font-face($name, $basename) {
  @font-face {
    font-family: $name;
    font-style: normal;
    font-weight: normal;
    src: url("#{$font-path}/#{$basename}.eot") format("eot"),
      url("#{$font-path}/#{$basename}.woff2") format("woff2"),
      url("#{$font-path}/#{$basename}.woff") format("woff"),
      url("#{$font-path}/#{$basename}.truetype") format("truetype");
  }
}

/// Include font-family properties
/// @param {String} $name [''] font family name
/// @param {String} $font-weight [''] font weight name
@mixin font-family($name, $font-weight: normal) {
  $properties: map-get($font-family-fallbacks, $name);

  font-family: map-get($properties, "font-family");
  font-style: map-get($properties, "font-style");
  font-weight: map-get(map-get($properties, "font-weight"), $font-weight);

  // FIXME: This selector should be avoided, how can it be properly deleted?
  body.#{to-lower-case(str-replace($name, " ", "-"))} & {
    font-family: $name;
    font-style: normal;
    font-weight: $font-weight;
  }
}

/// Include font-size properties
/// @param {Number} $size [$font-size-base] font size in pixel units
/// @param {Number} $line [$size*$base-line-height-ratio] font line height
@mixin font-size(
  $size: $font-size-base,
  $line: $size * $base-line-height-ratio
) {
  font-size: $size;

  @if ($line) {
    line-height: $line;
  }
}

/// Include font-family properties based on given font-style
/// @param {String} $name [normal] font style, one of [light, normal, normal-caps, bold, bold-caps, semibold-caps]
@mixin font-style($name: normal) {
  @if not($name == inherit) {
    $style: map-get($font-styles, $name);
    $font-weight: map-get($style, weight);
    @include font-family(map-get($style, family), $font-weight);

    @if map_has_key($style, letter-spacing) {
      letter-spacing: map-get($style, letter-spacing);
    }

    @if map_has_key($style, text-transform) {
      text-transform: map-get($style, text-transform);
    }
  } @else {
    font-style: inherit;
  }
}

/// Includes text-shadow property
/// @param {String} $color [$color-white] color name
/// @param {Number} $width [$cropping-shadow-width-base] shadow width
@mixin cropping-shadow(
  $color: $color-white,
  $width: $cropping-shadow-width-base
) {
  $step: 0.03em;
  $factor: 1;
  $shadows: ();

  @while ($factor <= $width) {
    $em: $step * $factor;
    $shadows: append($shadows, "#{$em} 0 #{$color}");
    $shadows: append($shadows, "#{-1 * $em} 0 #{$color}");
    $factor: $factor + 1;
  }

  text-shadow: implode($shadows, ",");
}

@mixin typography-level(
  $level: "1",
  $style: normal,
  $family: $font-family-proxima-nova
) {
  // TODO: Add font-style validation

  $key: "#{$family}.#{$level}";
  $font-size: get("#{$key}.font-size", $typography-levels);
  $line-height: get("#{$key}.line-height", $typography-levels);

  @include font-style($style);
  @include font-size($font-size, $line-height);
}
